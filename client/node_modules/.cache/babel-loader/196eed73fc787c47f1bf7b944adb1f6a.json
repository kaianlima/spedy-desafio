{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kaian Lima\\\\ReactApps\\\\spedy-desafio\\\\src\\\\components\\\\add-classificado-form\\\\add-classificado-form.jsx\";\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Button, LinearProgress } from \"@material-ui/core\";\nimport { TextField } from \"formik-material-ui\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = \"Required\";\n  } else if (values.firstName.length > 15) {\n    errors.firstName = \"Must be 15 characters or less\";\n  }\n\n  if (!values.lastName) {\n    errors.lastName = \"Required\";\n  } else if (values.lastName.length > 20) {\n    errors.lastName = \"Must be 20 characters or less\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  return errors;\n};\n\nconst AddClassificadoForm = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = \"Required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = \"Invalid email address\";\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        setSubmitting(false);\n        alert(JSON.stringify(values, null, 2));\n      }, 500);\n    },\n    children: ({\n      submitForm,\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        component: TextField,\n        name: \"email\",\n        type: \"email\",\n        label: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        component: TextField,\n        type: \"password\",\n        label: \"Password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), isSubmitting && /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: isSubmitting,\n        onClick: submitForm,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AddClassificadoForm;\nexport default AddClassificadoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddClassificadoForm\");","map":{"version":3,"sources":["C:/Users/Kaian Lima/ReactApps/spedy-desafio/src/components/add-classificado-form/add-classificado-form.jsx"],"names":["React","Formik","Form","Field","ErrorMessage","Button","LinearProgress","TextField","validate","values","errors","firstName","length","lastName","email","test","AddClassificadoForm","password","setSubmitting","setTimeout","alert","JSON","stringify","submitForm","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { Button, LinearProgress } from \"@material-ui/core\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.firstName) {\r\n    errors.firstName = \"Required\";\r\n  } else if (values.firstName.length > 15) {\r\n    errors.firstName = \"Must be 15 characters or less\";\r\n  }\r\n\r\n  if (!values.lastName) {\r\n    errors.lastName = \"Required\";\r\n  } else if (values.lastName.length > 20) {\r\n    errors.lastName = \"Must be 20 characters or less\";\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Required\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst AddClassificadoForm = () => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n      }}\r\n      validate={(values) => {\r\n        const errors: Partial<Values> = {};\r\n        if (!values.email) {\r\n          errors.email = \"Required\";\r\n        } else if (\r\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n        ) {\r\n          errors.email = \"Invalid email address\";\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(false);\r\n          alert(JSON.stringify(values, null, 2));\r\n        }, 500);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => (\r\n        <Form>\r\n          <Field\r\n            component={TextField}\r\n            name=\"email\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n          />\r\n          <br />\r\n          <Field\r\n            component={TextField}\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n          />\r\n          {isSubmitting && <LinearProgress />}\r\n          <br />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={isSubmitting}\r\n            onClick={submitForm}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddClassificadoForm;\r\n"]},"metadata":{},"sourceType":"module"}