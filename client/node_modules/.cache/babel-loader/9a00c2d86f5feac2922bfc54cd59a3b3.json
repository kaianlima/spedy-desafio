{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kaian Lima\\\\ReactApps\\\\spedy-desafio\\\\src\\\\components\\\\error-boundary\\\\error-boundary.jsx\";\nimport React from \"react\";\nimport api from \"../../services/api\";\n\nclass ErrorBoundary extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hasError: false\n    };\n  }\n\n  componentDidMount() {\n    // Set axios interceptors\n    this.requestInterceptor = api.interceptors.request.use(req => {\n      this.setState({\n        error: null\n      });\n      return req;\n    });\n    this.responseInterceptor = api.interceptors.response.use(res => res, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  static getDerivedStateFromError(error) {\n    // process the error\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n  }\n\n  componentWillUnmount() {\n    // Remove handlers, so Garbage Collector will get rid of if WrappedComponent will be removed\n    api.interceptors.request.eject(this.requestInterceptor);\n    api.interceptors.response.eject(this.responseInterceptor);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"error-container\",\n          children: \"404\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"error-text\",\n          children: \"Sorry this page is broken\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["C:/Users/Kaian Lima/ReactApps/spedy-desafio/src/components/error-boundary/error-boundary.jsx"],"names":["React","api","ErrorBoundary","Component","constructor","state","hasError","componentDidMount","requestInterceptor","interceptors","request","use","req","setState","error","responseInterceptor","response","res","getDerivedStateFromError","componentDidCatch","errorInfo","console","log","componentWillUnmount","eject","render","props","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,kBAAL,GAA0BP,GAAG,CAACQ,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,GAAD,IAAS;AAC9D,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAd;AACA,aAAOF,GAAP;AACD,KAHyB,CAA1B;AAKA,SAAKG,mBAAL,GAA2Bd,GAAG,CAACQ,YAAJ,CAAiBO,QAAjB,CAA0BL,GAA1B,CACxBM,GAAD,IAASA,GADgB,EAExBH,KAAD,IAAW;AACT,WAAKD,QAAL,CAAc;AAAEC,QAAAA;AAAF,OAAd;AACD,KAJwB,CAA3B;AAMD;;AAED,SAAOI,wBAAP,CAAgCJ,KAAhC,EAAuC;AACrC;AACA,WAAO;AAAER,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AAEDa,EAAAA,iBAAiB,CAACL,KAAD,EAAQM,SAAR,EAAmB;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ,EAAmBM,SAAnB;AACD;;AAEDG,EAAAA,oBAAoB,GAAG;AACrB;AACAtB,IAAAA,GAAG,CAACQ,YAAJ,CAAiBC,OAAjB,CAAyBc,KAAzB,CAA+B,KAAKhB,kBAApC;AACAP,IAAAA,GAAG,CAACQ,YAAJ,CAAiBO,QAAjB,CAA0BQ,KAA1B,CAAgC,KAAKT,mBAArC;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKpB,KAAL,CAAWC,QAAf,EAAyB;AACvB,0BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;;AAED,WAAO,KAAKoB,KAAL,CAAWC,QAAlB;AACD;;AAhDyC;;AAmD5C,eAAezB,aAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Set axios interceptors\r\n    this.requestInterceptor = api.interceptors.request.use((req) => {\r\n      this.setState({ error: null });\r\n      return req;\r\n    });\r\n\r\n    this.responseInterceptor = api.interceptors.response.use(\r\n      (res) => res,\r\n      (error) => {\r\n        this.setState({ error });\r\n      }\r\n    );\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // process the error\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Remove handlers, so Garbage Collector will get rid of if WrappedComponent will be removed\r\n    api.interceptors.request.eject(this.requestInterceptor);\r\n    api.interceptors.response.eject(this.responseInterceptor);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className=\"error-overlay\">\r\n          <h1 className=\"error-container\">404</h1>\r\n          <h5 className=\"error-text\">Sorry this page is broken</h5>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n"]},"metadata":{},"sourceType":"module"}