{"ast":null,"code":"import { all, takeLatest, call, put } from \"redux-saga/effects\";\nimport { fetchClassificadosSuccess, fetchClassificadosFailure, addClassificadoSuccess, addClassificadoFailure } from \"./classificado.actions\";\nimport ClassificadoActionTypes from \"./classificado.types\";\nimport api from \"../../services/api\";\n\nconst safe = (handler, saga, ...args) => function* (action) {\n  try {\n    yield call(saga, ...args, action);\n  } catch (err) {\n    yield call(handler, ...args, err);\n  }\n};\n\nconst onError = err => {\n  console.log(err.message);\n};\n\nexport function* fetchClassificadosAsync() {\n  const classificados = yield api.get(\"classificados\");\n  yield put(fetchClassificadosSuccess(classificados));\n}\nexport function* addClassificadoAsync({\n  payload\n}) {\n  try {\n    yield console.log(payload);\n    yield api.post(\"classificados\", payload);\n    yield put(addClassificadoSuccess());\n  } catch (error) {\n    yield put(addClassificadoFailure(error.message));\n  }\n}\nexport function* fetchClassificadosStart() {\n  yield takeLatest(ClassificadoActionTypes.FETCH_CLASSIFICADOS_START, safe(onError, fetchClassificadosAsync));\n}\nexport function* addClassificadoStart() {\n  yield console.log(\"in Saga Start\");\n  yield takeLatest(ClassificadoActionTypes.ADD_CLASSIFICADO_START, addClassificadoAsync);\n}\nexport function* onAddClassificadoSuccess() {\n  yield takeLatest(ClassificadoActionTypes.ADD_CLASSIFICADO_SUCCESS, fetchClassificadosAsync);\n}\nexport function* classificadoSagas() {\n  yield all([call(fetchClassificadosStart), call(addClassificadoStart), call(onAddClassificadoSuccess)]);\n}","map":{"version":3,"sources":["C:/Users/Kaian Lima/ReactApps/spedy-desafio/src/redux/classificado/classificado.sagas.js"],"names":["all","takeLatest","call","put","fetchClassificadosSuccess","fetchClassificadosFailure","addClassificadoSuccess","addClassificadoFailure","ClassificadoActionTypes","api","safe","handler","saga","args","action","err","onError","console","log","message","fetchClassificadosAsync","classificados","get","addClassificadoAsync","payload","post","error","fetchClassificadosStart","FETCH_CLASSIFICADOS_START","addClassificadoStart","ADD_CLASSIFICADO_START","onAddClassificadoSuccess","ADD_CLASSIFICADO_SUCCESS","classificadoSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SACEC,yBADF,EAEEC,yBAFF,EAGEC,sBAHF,EAIEC,sBAJF,QAKO,wBALP;AAOA,OAAOC,uBAAP,MAAoC,sBAApC;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;;AAEA,MAAMC,IAAI,GAAG,CAACC,OAAD,EAAUC,IAAV,EAAgB,GAAGC,IAAnB,KACX,WAAWC,MAAX,EAAmB;AACjB,MAAI;AACF,UAAMZ,IAAI,CAACU,IAAD,EAAO,GAAGC,IAAV,EAAgBC,MAAhB,CAAV;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,UAAMb,IAAI,CAACS,OAAD,EAAU,GAAGE,IAAb,EAAmBE,GAAnB,CAAV;AACD;AACF,CAPH;;AASA,MAAMC,OAAO,GAAID,GAAD,IAAS;AACvBE,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,OAAhB;AACD,CAFD;;AAIA,OAAO,UAAUC,uBAAV,GAAoC;AACzC,QAAMC,aAAa,GAAG,MAAMZ,GAAG,CAACa,GAAJ,CAAQ,eAAR,CAA5B;AACA,QAAMnB,GAAG,CAACC,yBAAyB,CAACiB,aAAD,CAA1B,CAAT;AACD;AAED,OAAO,UAAUE,oBAAV,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAA4C;AACjD,MAAI;AACF,UAAMP,OAAO,CAACC,GAAR,CAAYM,OAAZ,CAAN;AACA,UAAMf,GAAG,CAACgB,IAAJ,CAAS,eAAT,EAA0BD,OAA1B,CAAN;AACA,UAAMrB,GAAG,CAACG,sBAAsB,EAAvB,CAAT;AACD,GAJD,CAIE,OAAOoB,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACI,sBAAsB,CAACmB,KAAK,CAACP,OAAP,CAAvB,CAAT;AACD;AACF;AAED,OAAO,UAAUQ,uBAAV,GAAoC;AACzC,QAAM1B,UAAU,CACdO,uBAAuB,CAACoB,yBADV,EAEdlB,IAAI,CAACM,OAAD,EAAUI,uBAAV,CAFU,CAAhB;AAID;AAED,OAAO,UAAUS,oBAAV,GAAiC;AACtC,QAAMZ,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAN;AACA,QAAMjB,UAAU,CACdO,uBAAuB,CAACsB,sBADV,EAEdP,oBAFc,CAAhB;AAID;AAED,OAAO,UAAUQ,wBAAV,GAAqC;AAC1C,QAAM9B,UAAU,CACdO,uBAAuB,CAACwB,wBADV,EAEdZ,uBAFc,CAAhB;AAID;AAED,OAAO,UAAUa,iBAAV,GAA8B;AACnC,QAAMjC,GAAG,CAAC,CACRE,IAAI,CAACyB,uBAAD,CADI,EAERzB,IAAI,CAAC2B,oBAAD,CAFI,EAGR3B,IAAI,CAAC6B,wBAAD,CAHI,CAAD,CAAT;AAKD","sourcesContent":["import { all, takeLatest, call, put } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  fetchClassificadosSuccess,\r\n  fetchClassificadosFailure,\r\n  addClassificadoSuccess,\r\n  addClassificadoFailure,\r\n} from \"./classificado.actions\";\r\n\r\nimport ClassificadoActionTypes from \"./classificado.types\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nconst safe = (handler, saga, ...args) =>\r\n  function* (action) {\r\n    try {\r\n      yield call(saga, ...args, action);\r\n    } catch (err) {\r\n      yield call(handler, ...args, err);\r\n    }\r\n  };\r\n\r\nconst onError = (err) => {\r\n  console.log(err.message);\r\n};\r\n\r\nexport function* fetchClassificadosAsync() {\r\n  const classificados = yield api.get(\"classificados\");\r\n  yield put(fetchClassificadosSuccess(classificados));\r\n}\r\n\r\nexport function* addClassificadoAsync({ payload }) {\r\n  try {\r\n    yield console.log(payload);\r\n    yield api.post(\"classificados\", payload);\r\n    yield put(addClassificadoSuccess());\r\n  } catch (error) {\r\n    yield put(addClassificadoFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* fetchClassificadosStart() {\r\n  yield takeLatest(\r\n    ClassificadoActionTypes.FETCH_CLASSIFICADOS_START,\r\n    safe(onError, fetchClassificadosAsync)\r\n  );\r\n}\r\n\r\nexport function* addClassificadoStart() {\r\n  yield console.log(\"in Saga Start\");\r\n  yield takeLatest(\r\n    ClassificadoActionTypes.ADD_CLASSIFICADO_START,\r\n    addClassificadoAsync\r\n  );\r\n}\r\n\r\nexport function* onAddClassificadoSuccess() {\r\n  yield takeLatest(\r\n    ClassificadoActionTypes.ADD_CLASSIFICADO_SUCCESS,\r\n    fetchClassificadosAsync\r\n  );\r\n}\r\n\r\nexport function* classificadoSagas() {\r\n  yield all([\r\n    call(fetchClassificadosStart),\r\n    call(addClassificadoStart),\r\n    call(onAddClassificadoSuccess),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}