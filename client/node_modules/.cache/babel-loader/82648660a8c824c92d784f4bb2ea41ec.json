{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kaian Lima\\\\ReactApps\\\\spedy-desafio\\\\src\\\\components\\\\add-classificado-form\\\\add-classificado-form.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport AddClassificadoSnackbar from \"../add-classificado-snackbar/add-classificado-snackbar\";\nimport { addClassificadoStart } from \"../../redux/classificado/classificado.actions\";\nimport { toggleSnackbar } from \"../../redux/snackbar/snackbar.actions\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.titulo) {\n    errors.titulo = \"Obrigatório\";\n  } else if (values.titulo.length > 20) {\n    errors.titulo = \"Máximo de 20 caracteres\";\n  }\n\n  if (!values.descricao) {\n    errors.descricao = \"Obrigatório\";\n  } else if (values.descricao.length > 100) {\n    errors.descricao = \"Máximo de 100 caracteres\";\n  }\n\n  return errors;\n};\n\nconst AddClassificadoForm = ({\n  addClassificadoStart,\n  toggleSnackbar,\n  open,\n  setOpen\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        titulo: \"\",\n        descricao: \"\"\n      },\n      validate: validate,\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          setSubmitting(false);\n          toggleSnackbar();\n          addClassificadoStart(values);\n          setOpen(false);\n        }, 500);\n      },\n      children: ({\n        submitForm,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                component: TextField,\n                name: \"titulo\",\n                type: \"text\",\n                label: \"T\\xEDtulo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                component: TextField,\n                name: \"descricao\",\n                type: \"text\",\n                label: \"Descri\\xE7\\xE3o\",\n                multiline: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), isSubmitting && /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: isSubmitting,\n            onClick: submitForm,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddClassificadoSnackbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AddClassificadoForm;\n\nconst mapDispatchToProps = dispatch => ({\n  addClassificadoStart: classificadoData => dispatch(addClassificadoStart(classificadoData)),\n  toggleSnackbar: () => dispatch(toggleSnackbar())\n});\n\nexport default connect(null, mapDispatchToProps)(AddClassificadoForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddClassificadoForm\");","map":{"version":3,"sources":["C:/Users/Kaian Lima/ReactApps/spedy-desafio/src/components/add-classificado-form/add-classificado-form.jsx"],"names":["React","connect","Formik","Form","Field","TextField","Box","Grid","Button","LinearProgress","AddClassificadoSnackbar","addClassificadoStart","toggleSnackbar","validate","values","errors","titulo","length","descricao","AddClassificadoForm","open","setOpen","setSubmitting","setTimeout","submitForm","isSubmitting","mapDispatchToProps","dispatch","classificadoData"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nimport AddClassificadoSnackbar from \"../add-classificado-snackbar/add-classificado-snackbar\";\r\n\r\nimport { addClassificadoStart } from \"../../redux/classificado/classificado.actions\";\r\nimport { toggleSnackbar } from \"../../redux/snackbar/snackbar.actions\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.titulo) {\r\n    errors.titulo = \"Obrigatório\";\r\n  } else if (values.titulo.length > 20) {\r\n    errors.titulo = \"Máximo de 20 caracteres\";\r\n  }\r\n\r\n  if (!values.descricao) {\r\n    errors.descricao = \"Obrigatório\";\r\n  } else if (values.descricao.length > 100) {\r\n    errors.descricao = \"Máximo de 100 caracteres\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst AddClassificadoForm = ({\r\n  addClassificadoStart,\r\n  toggleSnackbar,\r\n  open,\r\n  setOpen,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          titulo: \"\",\r\n          descricao: \"\",\r\n        }}\r\n        validate={validate}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            setSubmitting(false);\r\n\r\n            toggleSnackbar();\r\n            addClassificadoStart(values);\r\n            setOpen(false);\r\n          }, 500);\r\n        }}\r\n      >\r\n        {({ submitForm, isSubmitting }) => (\r\n          <Form>\r\n            <Box mb={2}>\r\n              <Grid container spacing={2}>\r\n                <Grid item>\r\n                  <Field\r\n                    component={TextField}\r\n                    name=\"titulo\"\r\n                    type=\"text\"\r\n                    label=\"Título\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Field\r\n                    component={TextField}\r\n                    name=\"descricao\"\r\n                    type=\"text\"\r\n                    label=\"Descrição\"\r\n                    multiline\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n            {isSubmitting && <LinearProgress />}\r\n            <Grid>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isSubmitting}\r\n                onClick={submitForm}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <AddClassificadoSnackbar />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addClassificadoStart: (classificadoData) =>\r\n    dispatch(addClassificadoStart(classificadoData)),\r\n  toggleSnackbar: () => dispatch(toggleSnackbar()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(AddClassificadoForm);\r\n"]},"metadata":{},"sourceType":"module"}