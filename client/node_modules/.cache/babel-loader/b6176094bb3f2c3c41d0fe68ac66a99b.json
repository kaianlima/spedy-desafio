{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kaian Lima\\\\ReactApps\\\\spedy-desafio\\\\src\\\\components\\\\add-classificado-form\\\\add-classificado-form.jsx\";\nimport React from \"react\";\nimport { Form, Field } from \"react-final-form\";\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst onSubmit = async values => {\n  await sleep(300);\n  window.alert(JSON.stringify(values, 0, 2));\n};\n\nconst required = value => value ? undefined : \"Required\";\n\nconst mustBeNumber = value => isNaN(value) ? \"Must be a number\" : undefined;\n\nconst minValue = min => value => isNaN(value) || value >= min ? undefined : `Should be greater than ${min}`;\n\nconst composeValidators = (...validators) => value => validators.reduce((error, validator) => error || validator(value), undefined);\n\nconst AddClassificadoForm = () => {\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    render: ({\n      handleSubmit,\n      form,\n      submitting,\n      pristine,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"firstName\",\n        validate: required,\n        children: ({\n          input,\n          meta\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n            type: \"text\",\n            placeholder: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: meta.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"lastName\",\n        validate: required,\n        children: ({\n          input,\n          meta\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n            type: \"text\",\n            placeholder: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: meta.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"age\",\n        validate: composeValidators(required, mustBeNumber, minValue(18)),\n        children: ({\n          input,\n          meta\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n            type: \"text\",\n            placeholder: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: meta.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: submitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: form.reset,\n          disabled: submitting || pristine,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(values, 0, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AddClassificadoForm;\nexport default AddClassificadoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddClassificadoForm\");","map":{"version":3,"sources":["C:/Users/Kaian Lima/ReactApps/spedy-desafio/src/components/add-classificado-form/add-classificado-form.jsx"],"names":["React","Form","Field","sleep","ms","Promise","resolve","setTimeout","onSubmit","values","window","alert","JSON","stringify","required","value","undefined","mustBeNumber","isNaN","minValue","min","composeValidators","validators","reduce","error","validator","AddClassificadoForm","handleSubmit","form","submitting","pristine","input","meta","touched","reset"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\n\r\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst onSubmit = async (values) => {\r\n  await sleep(300);\r\n  window.alert(JSON.stringify(values, 0, 2));\r\n};\r\n\r\nconst required = (value) => (value ? undefined : \"Required\");\r\nconst mustBeNumber = (value) => (isNaN(value) ? \"Must be a number\" : undefined);\r\nconst minValue = (min) => (value) =>\r\n  isNaN(value) || value >= min ? undefined : `Should be greater than ${min}`;\r\nconst composeValidators = (...validators) => (value) =>\r\n  validators.reduce((error, validator) => error || validator(value), undefined);\r\n\r\nconst AddClassificadoForm = () => {\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Field name=\"firstName\" validate={required}>\r\n            {({ input, meta }) => (\r\n              <div>\r\n                <label>First Name</label>\r\n                <input {...input} type=\"text\" placeholder=\"First Name\" />\r\n                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n              </div>\r\n            )}\r\n          </Field>\r\n          <Field name=\"lastName\" validate={required}>\r\n            {({ input, meta }) => (\r\n              <div>\r\n                <label>Last Name</label>\r\n                <input {...input} type=\"text\" placeholder=\"Last Name\" />\r\n                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n              </div>\r\n            )}\r\n          </Field>\r\n          <Field\r\n            name=\"age\"\r\n            validate={composeValidators(required, mustBeNumber, minValue(18))}\r\n          >\r\n            {({ input, meta }) => (\r\n              <div>\r\n                <label>Age</label>\r\n                <input {...input} type=\"text\" placeholder=\"Age\" />\r\n                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n              </div>\r\n            )}\r\n          </Field>\r\n          <div className=\"buttons\">\r\n            <button type=\"submit\" disabled={submitting}>\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={form.reset}\r\n              disabled={submitting || pristine}\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n          <pre>{JSON.stringify(values, 0, 2)}</pre>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddClassificadoForm;\r\n"]},"metadata":{},"sourceType":"module"}