{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kaian Lima\\\\ReactApps\\\\spedy-desafio\\\\src\\\\components\\\\add-classificado-form\\\\add-classificado-form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { addClassificadoStart } from \"../../redux/classificado/classificado.actions\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.titulo) {\n    errors.titulo = \"Obrigatório\";\n  } else if (values.titulo.length > 20) {\n    errors.titulo = \"Máximo de 20 caracteres\";\n  }\n\n  if (!values.descricao) {\n    errors.descricao = \"Obrigatório\";\n  } else if (values.descricao.length > 100) {\n    errors.descricao = \"Máximo de 100 caracteres\";\n  }\n\n  return errors;\n};\n\nconst AddClassificadoForm = ({\n  addClassificadoStart\n}) => {\n  _s();\n\n  const [classificadoData, setClassificadoData] = useState({\n    titulo: \"\",\n    descricao: \"\"\n  });\n  const {\n    titulo,\n    descricao\n  } = classificadoData;\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setClassificadoData({ ...classificadoData,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      titulo: \"\",\n      descricao: \"\"\n    },\n    validate: validate,\n    onSubmit: ({\n      titulo,\n      descricao\n    }, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        setSubmitting(false);\n        setClassificadoData({ ...classificadoData,\n          titulo,\n          descricao\n        });\n        console.log(classificadoData);\n      }, 500);\n    },\n    children: ({\n      submitForm,\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              component: TextField,\n              name: \"titulo\",\n              type: \"text\",\n              label: \"T\\xEDtulo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              component: TextField,\n              name: \"descricao\",\n              type: \"text\",\n              label: \"Descri\\xE7\\xE3o\",\n              multiline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), isSubmitting && /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: isSubmitting,\n          onClick: submitForm,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddClassificadoForm, \"9MrI2be0UOq+y464/2Q2d7Dc6cU=\");\n\n_c = AddClassificadoForm;\n\nconst mapDispatchToProps = dispatch => ({\n  addClassificadoStart: classificadoData => dispatch(addClassificadoStart(classificadoData))\n});\n\nexport default connect(null, mapDispatchToProps)(AddClassificadoForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddClassificadoForm\");","map":{"version":3,"sources":["C:/Users/Kaian Lima/ReactApps/spedy-desafio/src/components/add-classificado-form/add-classificado-form.jsx"],"names":["React","useState","connect","Formik","Form","Field","TextField","Box","Grid","Button","LinearProgress","addClassificadoStart","validate","values","errors","titulo","length","descricao","AddClassificadoForm","classificadoData","setClassificadoData","handleChange","event","name","value","target","setSubmitting","setTimeout","console","log","submitForm","isSubmitting","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nimport { addClassificadoStart } from \"../../redux/classificado/classificado.actions\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.titulo) {\r\n    errors.titulo = \"Obrigatório\";\r\n  } else if (values.titulo.length > 20) {\r\n    errors.titulo = \"Máximo de 20 caracteres\";\r\n  }\r\n\r\n  if (!values.descricao) {\r\n    errors.descricao = \"Obrigatório\";\r\n  } else if (values.descricao.length > 100) {\r\n    errors.descricao = \"Máximo de 100 caracteres\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst AddClassificadoForm = ({ addClassificadoStart }) => {\r\n  const [classificadoData, setClassificadoData] = useState({\r\n    titulo: \"\",\r\n    descricao: \"\",\r\n  });\r\n\r\n  const { titulo, descricao } = classificadoData;\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setClassificadoData({ ...classificadoData, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        titulo: \"\",\r\n        descricao: \"\",\r\n      }}\r\n      validate={validate}\r\n      onSubmit={({ titulo, descricao }, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(false);\r\n\r\n          setClassificadoData({ ...classificadoData, titulo, descricao });\r\n          console.log(classificadoData);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => (\r\n        <Form>\r\n          <Box mb={2}>\r\n            <Grid container spacing={2}>\r\n              <Grid item>\r\n                <Field\r\n                  component={TextField}\r\n                  name=\"titulo\"\r\n                  type=\"text\"\r\n                  label=\"Título\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Field\r\n                  component={TextField}\r\n                  name=\"descricao\"\r\n                  type=\"text\"\r\n                  label=\"Descrição\"\r\n                  multiline\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          {isSubmitting && <LinearProgress />}\r\n          <Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={isSubmitting}\r\n              onClick={submitForm}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addClassificadoStart: (classificadoData) =>\r\n    dispatch(addClassificadoStart(classificadoData)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(AddClassificadoForm);\r\n"]},"metadata":{},"sourceType":"module"}