{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kaian Lima\\\\ReactApps\\\\spedy-desafio\\\\src\\\\components\\\\add-classificado-form\\\\add-classificado-form.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { addClassificadoStart } from \"../../redux/classificado/classificado.actions\";\nimport { toggleSnackbar } from \"../../redux/snackbar/snackbar.actions\";\nimport { selectDialogOpen } from \"../../redux/snackbar/snackbar.selectors\";\nimport { toggleDialog } from \"../../redux/snackbar/snackbar.actions\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.titulo) {\n    errors.titulo = \"Obrigatório\";\n  } else if (values.titulo.length > 20) {\n    errors.titulo = \"Máximo de 20 caracteres\";\n  }\n\n  if (!values.descricao) {\n    errors.descricao = \"Obrigatório\";\n  } else if (values.descricao.length > 100) {\n    errors.descricao = \"Máximo de 100 caracteres\";\n  }\n\n  return errors;\n};\n\nconst AddClassificadoForm = ({\n  addClassificadoStart,\n  toggleSnackbar,\n  open,\n  setOpen\n}) => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      titulo: \"\",\n      descricao: \"\"\n    },\n    validate: validate,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        setSubmitting(false);\n        toggleSnackbar();\n        addClassificadoStart(values);\n        setOpen(false);\n      }, 500);\n    },\n    children: ({\n      submitForm,\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              component: TextField,\n              name: \"titulo\",\n              type: \"text\",\n              label: \"T\\xEDtulo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              component: TextField,\n              name: \"descricao\",\n              type: \"text\",\n              label: \"Descri\\xE7\\xE3o\",\n              multiline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), isSubmitting && /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: isSubmitting,\n          onClick: submitForm,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AddClassificadoForm;\n\nconst mapDispatchToProps = dispatch => ({\n  addClassificadoStart: classificadoData => dispatch(addClassificadoStart(classificadoData)),\n  toggleSnackbar: () => dispatch(toggleSnackbar())\n});\n\nexport default connect(null, mapDispatchToProps)(AddClassificadoForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddClassificadoForm\");","map":{"version":3,"sources":["C:/Users/Kaian Lima/ReactApps/spedy-desafio/src/components/add-classificado-form/add-classificado-form.jsx"],"names":["React","connect","Formik","Form","Field","TextField","Box","Grid","Button","LinearProgress","addClassificadoStart","toggleSnackbar","selectDialogOpen","toggleDialog","validate","values","errors","titulo","length","descricao","AddClassificadoForm","open","setOpen","setSubmitting","setTimeout","submitForm","isSubmitting","mapDispatchToProps","dispatch","classificadoData"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nimport { addClassificadoStart } from \"../../redux/classificado/classificado.actions\";\r\nimport { toggleSnackbar } from \"../../redux/snackbar/snackbar.actions\";\r\nimport { selectDialogOpen } from \"../../redux/snackbar/snackbar.selectors\";\r\nimport { toggleDialog } from \"../../redux/snackbar/snackbar.actions\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.titulo) {\r\n    errors.titulo = \"Obrigatório\";\r\n  } else if (values.titulo.length > 20) {\r\n    errors.titulo = \"Máximo de 20 caracteres\";\r\n  }\r\n\r\n  if (!values.descricao) {\r\n    errors.descricao = \"Obrigatório\";\r\n  } else if (values.descricao.length > 100) {\r\n    errors.descricao = \"Máximo de 100 caracteres\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst AddClassificadoForm = ({\r\n  addClassificadoStart,\r\n  toggleSnackbar,\r\n  open,\r\n  setOpen,\r\n}) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        titulo: \"\",\r\n        descricao: \"\",\r\n      }}\r\n      validate={validate}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(false);\r\n\r\n          toggleSnackbar();\r\n          addClassificadoStart(values);\r\n          setOpen(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => (\r\n        <Form>\r\n          <Box mb={2}>\r\n            <Grid container spacing={2}>\r\n              <Grid item>\r\n                <Field\r\n                  component={TextField}\r\n                  name=\"titulo\"\r\n                  type=\"text\"\r\n                  label=\"Título\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Field\r\n                  component={TextField}\r\n                  name=\"descricao\"\r\n                  type=\"text\"\r\n                  label=\"Descrição\"\r\n                  multiline\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          {isSubmitting && <LinearProgress />}\r\n          <Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={isSubmitting}\r\n              onClick={submitForm}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addClassificadoStart: (classificadoData) =>\r\n    dispatch(addClassificadoStart(classificadoData)),\r\n  toggleSnackbar: () => dispatch(toggleSnackbar()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(AddClassificadoForm);\r\n"]},"metadata":{},"sourceType":"module"}