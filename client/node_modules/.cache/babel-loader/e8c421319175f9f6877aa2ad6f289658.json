{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kaian Lima\\\\ReactApps\\\\spedy-desafio\\\\src\\\\components\\\\add-classificado-form\\\\add-classificado-form.jsx\";\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport Grid from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.titulo) {\n    errors.titulo = \"Obrigatório\";\n  } else if (values.titulo.length > 20) {\n    errors.titulo = \"Máximo de 20 caracteres\";\n  }\n\n  if (!values.descricao) {\n    errors.descricao = \"Obrigatório\";\n  } else if (values.descricao.length > 100) {\n    errors.descricao = \"Máximo de 100 caracteres\";\n  }\n\n  return errors;\n};\n\nconst AddClassificadoForm = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      titulo: \"\",\n      descricao: \"\"\n    },\n    validate: validate,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        setSubmitting(false);\n        alert(JSON.stringify(values, null, 2));\n      }, 500);\n    },\n    children: ({\n      submitForm,\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        mb: 2,\n        item: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          component: TextField,\n          name: \"titulo\",\n          type: \"text\",\n          label: \"T\\xEDtulo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          component: TextField,\n          name: \"descricao\",\n          type: \"text\",\n          label: \"Descri\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), isSubmitting && /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: isSubmitting,\n          onClick: submitForm,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AddClassificadoForm;\nexport default AddClassificadoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddClassificadoForm\");","map":{"version":3,"sources":["C:/Users/Kaian Lima/ReactApps/spedy-desafio/src/components/add-classificado-form/add-classificado-form.jsx"],"names":["React","Formik","Form","Field","TextField","Grid","Button","LinearProgress","validate","values","errors","titulo","length","descricao","AddClassificadoForm","setSubmitting","setTimeout","alert","JSON","stringify","submitForm","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;AAEA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3B,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAACD,MAAM,CAACE,MAAZ,EAAoB;AAClBD,IAAAA,MAAM,CAACC,MAAP,GAAgB,aAAhB;AACD,GAFD,MAEO,IAAIF,MAAM,CAACE,MAAP,CAAcC,MAAd,GAAuB,EAA3B,EAA+B;AACpCF,IAAAA,MAAM,CAACC,MAAP,GAAgB,yBAAhB;AACD;;AAED,MAAI,CAACF,MAAM,CAACI,SAAZ,EAAuB;AACrBH,IAAAA,MAAM,CAACG,SAAP,GAAmB,aAAnB;AACD,GAFD,MAEO,IAAIJ,MAAM,CAACI,SAAP,CAAiBD,MAAjB,GAA0B,GAA9B,EAAmC;AACxCF,IAAAA,MAAM,CAACG,SAAP,GAAmB,0BAAnB;AACD;;AAED,SAAOH,MAAP;AACD,CAfD;;AAiBA,MAAMI,mBAAmB,GAAG,MAAM;AAChC,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbH,MAAAA,MAAM,EAAE,EADK;AAEbE,MAAAA,SAAS,EAAE;AAFE,KADjB;AAKE,IAAA,QAAQ,EAAEL,QALZ;AAME,IAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAAEM,MAAAA;AAAF,KAAT,KAA+B;AACvCC,MAAAA,UAAU,CAAC,MAAM;AACfD,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeV,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACD,OAHS,EAGP,GAHO,CAAV;AAID,KAXH;AAAA,cAaG,CAAC;AAAEW,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAAD,kBACC,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAa,QAAA,IAAI,MAAjB;AAAkB,QAAA,OAAO,EAAE,CAA3B;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,SAAS,EAAEjB,SADb;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,KAAD;AACE,UAAA,SAAS,EAAEA,SADb;AAEE,UAAA,IAAI,EAAC,WAFP;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAeGiB,YAAY,iBAAI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAfnB,eAgBE,QAAC,IAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,QAAQ,EAAEA,YAHZ;AAIE,UAAA,OAAO,EAAED,UAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CA9CD;;KAAMN,mB;AAgDN,eAAeA,mBAAf","sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\nimport Grid from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.titulo) {\r\n    errors.titulo = \"Obrigatório\";\r\n  } else if (values.titulo.length > 20) {\r\n    errors.titulo = \"Máximo de 20 caracteres\";\r\n  }\r\n\r\n  if (!values.descricao) {\r\n    errors.descricao = \"Obrigatório\";\r\n  } else if (values.descricao.length > 100) {\r\n    errors.descricao = \"Máximo de 100 caracteres\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst AddClassificadoForm = () => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        titulo: \"\",\r\n        descricao: \"\",\r\n      }}\r\n      validate={validate}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(false);\r\n          alert(JSON.stringify(values, null, 2));\r\n        }, 500);\r\n      }}\r\n    >\r\n      {({ submitForm, isSubmitting }) => (\r\n        <Form>\r\n          <Grid mb={2} item spacing={2}>\r\n            <Field\r\n              component={TextField}\r\n              name=\"titulo\"\r\n              type=\"text\"\r\n              label=\"Título\"\r\n            />\r\n            <Field\r\n              component={TextField}\r\n              name=\"descricao\"\r\n              type=\"text\"\r\n              label=\"Descrição\"\r\n            />\r\n          </Grid>\r\n          {isSubmitting && <LinearProgress />}\r\n          <Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={isSubmitting}\r\n              onClick={submitForm}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddClassificadoForm;\r\n"]},"metadata":{},"sourceType":"module"}